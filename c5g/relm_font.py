from relm import *


Define[
    font8x8 := Table(128),
    font8x8.Default(),
    Array(
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("!")),
    Array(
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00000000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord('"')),
    Array(
        0x00101000,
        0x00101000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("#")),
    Array(
        0x00101000,
        0x00101000,
        0x11111110,
        0x00101000,
        0x11111110,
        0x00101000,
        0x00101000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("$")),
    Array(
        0x00010000,
        0x01111100,
        0x10010000,
        0x01111100,
        0x00010010,
        0x01111100,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("%")),
    Array(
        0x01000010,
        0x10100100,
        0x01001000,
        0x00010000,
        0x00100100,
        0x01001010,
        0x10000100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("&")),
    Array(
        0x00110000,
        0x01001000,
        0x00110000,
        0x00110010,
        0x01001100,
        0x10001100,
        0x01110010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("'")),
    Array(
        0x00010000,
        0x00010000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("(")),
    Array(
        0x00001000,
        0x00010000,
        0x00100000,
        0x00100000,
        0x00100000,
        0x00010000,
        0x00001000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord(")")),
    Array(
        0x00100000,
        0x00010000,
        0x00001000,
        0x00001000,
        0x00001000,
        0x00010000,
        0x00100000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("*")),
    Array(
        0x00010000,
        0x10010010,
        0x01010100,
        0x00111000,
        0x01010100,
        0x10010010,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("+")),
    Array(
        0x00010000,
        0x00010000,
        0x00010000,
        0x11111110,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord(",")),
    Array(
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00010000,
        0x00100000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("-")),
    Array(
        0x00000000,
        0x00000000,
        0x00000000,
        0x11111110,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord(".")),
    Array(
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00010000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("/")),
    Array(
        0x00000010,
        0x00000100,
        0x00001000,
        0x00010000,
        0x00100000,
        0x01000000,
        0x10000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("0")),
    Array(
        0x00111000,
        0x01000100,
        0x10000010,
        0x10000010,
        0x10000010,
        0x01000100,
        0x00111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("1")),
    Array(
        0x00010000,
        0x00110000,
        0x01010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("2")),
    Array(
        0x01111100,
        0x10000010,
        0x00000010,
        0x00001100,
        0x00110000,
        0x01000000,
        0x11111110,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("3")),
    Array(
        0x01111100,
        0x10000010,
        0x00000010,
        0x00011100,
        0x00000010,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("4")),
    Array(
        0x00001100,
        0x00010100,
        0x00100100,
        0x01000100,
        0x10000100,
        0x11111110,
        0x00000100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("5")),
    Array(
        0x11111110,
        0x10000000,
        0x11111100,
        0x10000010,
        0x00000010,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("6")),
    Array(
        0x00111100,
        0x01000000,
        0x10000000,
        0x11111100,
        0x10000010,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("7")),
    Array(
        0x11111110,
        0x00000010,
        0x00000100,
        0x00001000,
        0x00001000,
        0x00010000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("8")),
    Array(
        0x01111100,
        0x10000010,
        0x10000010,
        0x01111100,
        0x10000010,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("9")),
    Array(
        0x01111100,
        0x10000010,
        0x10000010,
        0x01111110,
        0x00000010,
        0x00000100,
        0x01111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord(":")),
    Array(
        0x00000000,
        0x00000000,
        0x00010000,
        0x00000000,
        0x00000000,
        0x00010000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord(";")),
    Array(
        0x00000000,
        0x00000000,
        0x00010000,
        0x00000000,
        0x00000000,
        0x00010000,
        0x00100000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("<")),
    Array(
        0x00001000,
        0x00010000,
        0x00100000,
        0x01000000,
        0x00100000,
        0x00010000,
        0x00001000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("=")),
    Array(
        0x00000000,
        0x00000000,
        0x11111110,
        0x00000000,
        0x11111110,
        0x00000000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord(">")),
    Array(
        0x00100000,
        0x00010000,
        0x00001000,
        0x00000100,
        0x00001000,
        0x00010000,
        0x00100000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("?")),
    Array(
        0x00111000,
        0x01000100,
        0x00000100,
        0x00001000,
        0x00010000,
        0x00000000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("@")),
    Array(
        0x00111000,
        0x01000100,
        0x10011010,
        0x10101010,
        0x10010100,
        0x01000000,
        0x00111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("A")),
    Array(
        0x00010000,
        0x00101000,
        0x00101000,
        0x01000100,
        0x01111100,
        0x10000010,
        0x10000010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("B")),
    Array(
        0x11111100,
        0x10000010,
        0x10000010,
        0x11111100,
        0x10000010,
        0x10000010,
        0x11111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("C")),
    Array(
        0x01111100,
        0x10000010,
        0x10000000,
        0x10000000,
        0x10000000,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("D")),
    Array(
        0x11111000,
        0x10000100,
        0x10000010,
        0x10000010,
        0x10000010,
        0x10000100,
        0x11111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("E")),
    Array(
        0x11111110,
        0x10000000,
        0x10000000,
        0x11111100,
        0x10000000,
        0x10000000,
        0x11111110,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("F")),
    Array(
        0x11111110,
        0x10000000,
        0x10000000,
        0x11111100,
        0x10000000,
        0x10000000,
        0x10000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("G")),
    Array(
        0x01111100,
        0x10000010,
        0x10000000,
        0x10001110,
        0x10000010,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("H")),
    Array(
        0x10000010,
        0x10000010,
        0x10000010,
        0x11111110,
        0x10000010,
        0x10000010,
        0x10000010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("I")),
    Array(
        0x00111000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("J")),
    Array(
        0x00001110,
        0x00000100,
        0x00000100,
        0x00000100,
        0x00000100,
        0x10000100,
        0x01111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("K")),
    Array(
        0x10000010,
        0x10000100,
        0x10001000,
        0x10010000,
        0x10101000,
        0x11000100,
        0x10000010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("L")),
    Array(
        0x10000000,
        0x10000000,
        0x10000000,
        0x10000000,
        0x10000000,
        0x10000000,
        0x11111110,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("M")),
    Array(
        0x10000010,
        0x11000110,
        0x10101010,
        0x10010010,
        0x10000010,
        0x10000010,
        0x10000010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("N")),
    Array(
        0x10000010,
        0x11000010,
        0x10100010,
        0x10010010,
        0x10001010,
        0x10000110,
        0x10000010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("O")),
    Array(
        0x01111100,
        0x10000010,
        0x10000010,
        0x10000010,
        0x10000010,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("P")),
    Array(
        0x11111100,
        0x10000010,
        0x10000010,
        0x11111100,
        0x10000000,
        0x10000000,
        0x10000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("Q")),
    Array(
        0x01111100,
        0x10000010,
        0x10000010,
        0x10000010,
        0x10001010,
        0x10000100,
        0x01111010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("R")),
    Array(
        0x11111100,
        0x10000010,
        0x10000010,
        0x11111100,
        0x10001000,
        0x10000100,
        0x10000010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("S")),
    Array(
        0x01111100,
        0x10000010,
        0x10000000,
        0x01111100,
        0x00000010,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("T")),
    Array(
        0x11111110,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("U")),
    Array(
        0x10000010,
        0x10000010,
        0x10000010,
        0x10000010,
        0x10000010,
        0x10000010,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("V")),
    Array(
        0x10000010,
        0x10000010,
        0x01000100,
        0x01000100,
        0x00101000,
        0x00101000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("W")),
    Array(
        0x10000010,
        0x10010010,
        0x10010010,
        0x10101010,
        0x10101010,
        0x01000100,
        0x01000100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("X")),
    Array(
        0x10000010,
        0x01000100,
        0x00101000,
        0x00010000,
        0x00101000,
        0x01000100,
        0x10000010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("Y")),
    Array(
        0x10000010,
        0x01000100,
        0x00101000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("Z")),
    Array(
        0x11111110,
        0x00000100,
        0x00001000,
        0x00010000,
        0x00100000,
        0x01000000,
        0x11111110,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("[")),
    Array(
        0x00111000,
        0x00100000,
        0x00100000,
        0x00100000,
        0x00100000,
        0x00100000,
        0x00111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("\\")),
    Array(
        0x10000000,
        0x01000000,
        0x00100000,
        0x00010000,
        0x00001000,
        0x00000100,
        0x00000010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("]")),
    Array(
        0x00111000,
        0x00001000,
        0x00001000,
        0x00001000,
        0x00001000,
        0x00001000,
        0x00111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("^")),
    Array(
        0x00010000,
        0x00101000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("_")),
    Array(
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x11111110,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("`")),
    Array(
        0x00010000,
        0x00001000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("a")),
    Array(
        0x00000000,
        0x00000000,
        0x00111000,
        0x00000100,
        0x00111100,
        0x01000100,
        0x00111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("b")),
    Array(
        0x01000000,
        0x01000000,
        0x01011000,
        0x01100100,
        0x01000100,
        0x01000100,
        0x01111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("c")),
    Array(
        0x00000000,
        0x00000000,
        0x00111100,
        0x01000000,
        0x01000000,
        0x01000000,
        0x00111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("d")),
    Array(
        0x00000100,
        0x00000100,
        0x00110100,
        0x01001100,
        0x01000100,
        0x01000100,
        0x00111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("e")),
    Array(
        0x00000000,
        0x00000000,
        0x00111000,
        0x01000100,
        0x01111100,
        0x01000000,
        0x00111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("f")),
    Array(
        0x00001100,
        0x00010000,
        0x00010000,
        0x01111100,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("g")),
    Array(
        0x00000000,
        0x00000000,
        0x00111100,
        0x01000100,
        0x01000100,
        0x00111100,
        0x00000100,
        0x00111000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("h")),
    Array(
        0x01000000,
        0x01000000,
        0x01011000,
        0x01100100,
        0x01000100,
        0x01000100,
        0x01000100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("i")),
    Array(
        0x00010000,
        0x00000000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("j")),
    Array(
        0x00000100,
        0x00000000,
        0x00000100,
        0x00000100,
        0x00000100,
        0x01000100,
        0x00111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("k")),
    Array(
        0x01000000,
        0x01000000,
        0x01000100,
        0x01001000,
        0x01010000,
        0x01101000,
        0x01000100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("l")),
    Array(
        0x00110000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("m")),
    Array(
        0x00000000,
        0x00000000,
        0x11101100,
        0x10010010,
        0x10010010,
        0x10010010,
        0x10010010,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("n")),
    Array(
        0x00000000,
        0x00000000,
        0x01011000,
        0x01100100,
        0x01000100,
        0x01000100,
        0x01000100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("o")),
    Array(
        0x00000000,
        0x00000000,
        0x00111000,
        0x01000100,
        0x01000100,
        0x01000100,
        0x00111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("p")),
    Array(
        0x00000000,
        0x00000000,
        0x01111000,
        0x01000100,
        0x01000100,
        0x01111000,
        0x01000000,
        0x01000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("q")),
    Array(
        0x00000000,
        0x00000000,
        0x00111100,
        0x01000100,
        0x01000100,
        0x00111100,
        0x00000100,
        0x00000100,
    ),
    font8x8.Return(),
    font8x8.Case(ord("r")),
    Array(
        0x00000000,
        0x00000000,
        0x01011000,
        0x01100100,
        0x01000000,
        0x01000000,
        0x01000000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("s")),
    Array(
        0x00000000,
        0x00000000,
        0x00111100,
        0x01000000,
        0x00111000,
        0x00000100,
        0x01111000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("t")),
    Array(
        0x00000000,
        0x00100000,
        0x01111100,
        0x00100000,
        0x00100000,
        0x00100000,
        0x00011100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("u")),
    Array(
        0x00000000,
        0x00000000,
        0x01000100,
        0x01000100,
        0x01000100,
        0x01001100,
        0x00110100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("v")),
    Array(
        0x00000000,
        0x00000000,
        0x01000100,
        0x01000100,
        0x00101000,
        0x00101000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("w")),
    Array(
        0x00000000,
        0x00000000,
        0x10010010,
        0x10010010,
        0x10101010,
        0x01000100,
        0x01000100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("x")),
    Array(
        0x00000000,
        0x00000000,
        0x01000100,
        0x00101000,
        0x00010000,
        0x00101000,
        0x01000100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("y")),
    Array(
        0x00000000,
        0x00000000,
        0x01000100,
        0x01000100,
        0x00101000,
        0x00010000,
        0x00100000,
        0x01000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("z")),
    Array(
        0x00000000,
        0x00000000,
        0x01111100,
        0x00001000,
        0x00010000,
        0x00100000,
        0x01111100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("{")),
    Array(
        0x00001100,
        0x00010000,
        0x00010000,
        0x00100000,
        0x00010000,
        0x00010000,
        0x00001100,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("|")),
    Array(
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00010000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("}")),
    Array(
        0x01100000,
        0x00010000,
        0x00010000,
        0x00001000,
        0x00010000,
        0x00010000,
        0x01100000,
        0x00000000,
    ),
    font8x8.Return(),
    font8x8.Case(ord("~")),
    Array(
        0x00000000,
        0x00000000,
        0x01100000,
        0x10010010,
        0x00001100,
        0x00000000,
        0x00000000,
        0x00000000,
    ),
    font8x8.Return(),
]


class Console:
    def __init__(
        self,
        vram: Array,
        width: int,
        fifo_font: FIFO,
        fifo_print: FIFO,
        font: Table = font8x8,
    ):
        self.vram = vram
        self.width = width
        self.fifo_font = fifo_font
        self.fifo_print = fifo_print
        self.font = font

    def PutChar(
        self,
        pos: int | BinaryOp,
        ch: int | BinaryOp,
        fg: int | BinaryOp,
        bg: int | BinaryOp,
    ) -> Block:
        return Block[
            self.font.Switch(ch, acc=self.fifo_font.port),
            self.vram[pos](self.fifo_font.Pop() * fg + bg),
            RegB(RegB + self.width, self.fifo_font.Pop() * fg + bg).opb("PUT"),
            RegB(RegB + self.width, self.fifo_font.Pop() * fg + bg).opb("PUT"),
            RegB(RegB + self.width, self.fifo_font.Pop() * fg + bg).opb("PUT"),
            RegB(RegB + self.width, self.fifo_font.Pop() * fg + bg).opb("PUT"),
            RegB(RegB + self.width, self.fifo_font.Pop() * fg + bg).opb("PUT"),
            RegB(RegB + self.width, self.fifo_font.Pop() * fg + bg).opb("PUT"),
            RegB(RegB + self.width, self.fifo_font.Pop() * fg + bg).opb("PUT"),
        ]

    def Service(self) -> Block:
        return Block[
            pos := Int(),
            color_fg := Int(),
            color_bg := Int(),
            self.fifo_font.Lock(),
            self.fifo_print.Lock(),
            Do()[
                If(RegB(self.fifo_print.Pop(), 0x80000000).opb("AND") == 0)[
                    text := Int(RegB),
                    While(text != 0)[
                        self.PutChar(pos, text & 0x7F, color_fg, color_bg),
                        pos(pos + 1),
                        text(text >> 8),
                    ],
                    Continue(),
                ],
                If(RegB & 0x40000000 == 0)[pos(RegB & 0x3FFFFFFF), Continue()],
                bg := Int(RegB & 0xF),
                color_bg(Acc * 0x11111111),
                color_fg(((RegB & 0xF0) >> 4) - bg),
            ],
        ]

    def Print(
        self,
        text: str,
        pos: int | BinaryOp | None = None,
        color: int | BinaryOp | None = None,
    ) -> Block:
        p = []
        if pos is not None:
            p.append(pos | 0x80000000)
        if color is not None:
            p.append(color | 0xC0000000)
        while text:
            p.append(sum(ord(ch) << (i * 8) for i, ch in enumerate(text[:4])))
            text = text[4:]
        return Block[self.fifo_print.Push(*p)]

    def Decimal(self) -> Function:
        return Function(value := Int(), digit := Int(), zero := Int())[
            v := Int(RegB(digit, value)),
            If(v >= RegB * 6)[
                v3 := Int(v - RegB * 6),
                d3 := Int(6),
            ].Else[
                If(v >= RegB * 3)[
                    v3(v - RegB * 3),
                    d3(3),
                ].Else[
                    v3(v),
                    d3(0),
                ]
            ],
            If(v3 >= RegB * 2)[
                v2 := Int(v3 - RegB * 2),
                d2 := Int(d3 + 2),
            ].Else[
                v2(v3),
                d2(d3),
            ],
            If(v2 >= RegB)[
                v1 := Int(v2 - RegB),
                d1 := Int(d2 + 1),
            ].Else[
                v1(v2),
                d1(d2),
            ],
            If(d1 != 0)[
                d := Int(d1 + ord("0")),
                zero(ord("0")),
            ].Else[d(zero)],
            self.fifo_print.Push(d),
        ].Return(v1)
